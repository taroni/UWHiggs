
# Get common recipes
recipes = ENV['fsa'] + '/PlotTools/rake/recipes.rake'
import recipes

require ENV['CMSSW_BASE'] + '/src/FinalStateAnalysis/PlotTools/rake/tools.rb'
require 'pathname'

$jobid = ENV['jobid']
$blind = ENV['blind']

# Figure out what run period we are in
$period = '13TeV'
PU = ENV['PU']
#if $jobid.include? '8TeV'
#  $period = '8TeV'
#end


################################################################################
## Sample names ################################################################
################################################################################
#
# Get sample names containing a substring
def get_sample_names(substring)
  inputs = Dir.glob("inputs/#{$jobid}/*.txt").select {|x| x.include? substring}
  inputs = inputs.map{|x| File.basename(x).sub(".txt", "")}
  return inputs
end
#
samples = Hash[
               "ttbar" => get_sample_names('TT'),
               "singlet" => get_sample_names('T_t')+get_sample_names('Tbar_t'), 
               "wjets" => get_sample_names('JetsToLNu'),
               "zjets" => get_sample_names('JetsToLL_M'),
               "diboson" =>get_sample_names('WWTo')+get_sample_names('WZTo')+get_sample_names('ZZTo')+get_sample_names('WG'),
               "triboson" => get_sample_names('WWW')+get_sample_names('ZZZ')+get_sample_names('WWZ')+get_sample_names('WZZ'),
               "ewk" => get_sample_names('EWK'),
               "signalMC" => get_sample_names('HToETau_M125'),
               "signalHighMass" => get_sample_names('ggM300ETau')+get_sample_names('ggM450ETau')+get_sample_names('ggM600ETau')+get_sample_names('ggM750ETau')+get_sample_names('ggM900ETau')+get_sample_names('GluGlu_LFV_HToETau_M200'),
               "HiggsTo2Taus" => get_sample_names('HToTauTau_M125_'),
               "dataSingleE" => get_sample_names('data_SingleElectron'),
               "dataSingleM" => get_sample_names('data_SingleMuon'),
               "dataMuonEG" => get_sample_names('data_MuonEG')
]



# Function to get the .root files for an analyzer and samples
def get_analyzer_results(analyzer, the_samples)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
  the_samples.each do |sample|
    output << "results/#{$jobid}/#{analyzer_base}/#{sample}.root"
  end
  return output
end
def get_plotter_results(analyzer)
  output = Array.new
  analyzer_base = analyzer.sub('.py', '')
end

################################################################################
## Recipes to analyze the GG channel of the LFV HToMuTau analysis
##  targets:
##     mt
################################################################################

task :recoplots => get_analyzer_results("ETauAnalyzer.py",
                                        samples['dataSingleE']+
                                        samples['ttbar']+samples['singlet']+
                                        samples['wjets']+
                                        samples['zjets']+
                                        samples['diboson']+samples['triboson']+
                                        samples['ewk']+
                                        samples['signalHighMass']+
                                        samples['signalMC']+samples['HiggsTo2Taus']
                                       )
task :recoplotsEMu => get_analyzer_results("EMuAnalyzer.py", samples['dataMuonEG']+
                                                                     samples['ttbar']+samples['singlet']+
                                                                     samples['wjets']+samples['zjets']+
                                                                     samples['diboson']+samples['triboson']+
                                                                     samples['ewk']+
                                                                     samples['signalHighMass']+
                                                                     samples['signalMC']+samples['HiggsTo2Taus']
                                       )


$etdir = "plots/#{$jobid}/ETauAnalyzer/et/"
directory $etdir 
file  "#{$emtdir}/plot#{$period}.root" do |t|
  sh "echo $jobid"
  sh "python myNewPlotterReco.py" 
  
end


task :drawTauFakeRate => get_plotter_results("plotTauFakeRate.py")
